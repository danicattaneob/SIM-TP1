/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UI;

import Logica.Gestor;
import java.util.LinkedList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author matias
 */
public class VentanaGeneradorCongruencial extends javax.swing.JFrame {

    Gestor gestor;

    /**
     * Creates new form VentanaPrincipal
     */
    public VentanaGeneradorCongruencial(Gestor gestor) {
        initComponents();
        this.gestor = gestor;

        btgMetodo.add(rbtCongruencialMixto);
        btgMetodo.add(rbtCongruencialMultiplicativo);
        btgParametros.add(rbtParametrosAM);
        btgParametros.add(rbtParametrosGK);

        rbtCongruencialMixto.setSelected(true);
        rbtParametrosAM.setSelected(true);
        txtA.setEnabled(true);
        txtM.setEnabled(true);
        txtG.setEnabled(false);
        txtK.setEnabled(false);

        btnGenerarOtroNumero.setEnabled(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btgMetodo = new javax.swing.ButtonGroup();
        btgParametros = new javax.swing.ButtonGroup();
        pnlGeneradorCongruencial = new javax.swing.JPanel();
        rbtCongruencialMixto = new javax.swing.JRadioButton();
        rbtCongruencialMultiplicativo = new javax.swing.JRadioButton();
        txtSemilla = new javax.swing.JTextField();
        rbtParametrosAM = new javax.swing.JRadioButton();
        txtM = new javax.swing.JTextField();
        rbtParametrosGK = new javax.swing.JRadioButton();
        txtA = new javax.swing.JTextField();
        txtG = new javax.swing.JTextField();
        txtC = new javax.swing.JTextField();
        txtK = new javax.swing.JTextField();
        scpTblRnd = new javax.swing.JScrollPane();
        tblRnd = new javax.swing.JTable();
        btnGenerarSerie = new javax.swing.JButton();
        btnGenerarOtroNumero = new javax.swing.JButton();
        lblSemilla = new javax.swing.JLabel();
        lblMetodo = new javax.swing.JLabel();
        lblC = new javax.swing.JLabel();
        lblM = new javax.swing.JLabel();
        lblA = new javax.swing.JLabel();
        lblG = new javax.swing.JLabel();
        lblK = new javax.swing.JLabel();
        lblG2 = new javax.swing.JLabel();
        lblK2 = new javax.swing.JLabel();
        cbxCAutomatico = new javax.swing.JCheckBox();
        lblCCalculado = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Generador congruencial");
        setResizable(false);

        pnlGeneradorCongruencial.setPreferredSize(new java.awt.Dimension(740, 440));

        rbtCongruencialMixto.setText("Congruencial mixto");
        rbtCongruencialMixto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbtCongruencialMixtoActionPerformed(evt);
            }
        });

        rbtCongruencialMultiplicativo.setText("Congruencial multiplicativo");
        rbtCongruencialMultiplicativo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbtCongruencialMultiplicativoActionPerformed(evt);
            }
        });

        rbtParametrosAM.setText("Ingresar m y a");
        rbtParametrosAM.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbtParametrosAMActionPerformed(evt);
            }
        });

        rbtParametrosGK.setText("Ingresar g y k");
        rbtParametrosGK.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbtParametrosGKActionPerformed(evt);
            }
        });

        tblRnd.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Orden", "Número"
            }
        ));
        scpTblRnd.setViewportView(tblRnd);

        btnGenerarSerie.setText("Generar serie");
        btnGenerarSerie.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGenerarSerieActionPerformed(evt);
            }
        });

        btnGenerarOtroNumero.setText("Generar otro número");
        btnGenerarOtroNumero.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGenerarOtroNumeroActionPerformed(evt);
            }
        });

        lblSemilla.setText("Semilla (X0):");

        lblMetodo.setText("Método:");

        lblC.setText("c:");

        lblM.setText("m:");

        lblA.setText("a:");

        lblG.setText("g:");

        lblK.setText("k:");

        lblG2.setText("para m = 2 ^ g");

        lblK2.setText("para a = 1 + 4 K");

        cbxCAutomatico.setText("Generar c automaticamente");
        cbxCAutomatico.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbxCAutomaticoActionPerformed(evt);
            }
        });

        lblCCalculado.setText("c = ");

        javax.swing.GroupLayout pnlGeneradorCongruencialLayout = new javax.swing.GroupLayout(pnlGeneradorCongruencial);
        pnlGeneradorCongruencial.setLayout(pnlGeneradorCongruencialLayout);
        pnlGeneradorCongruencialLayout.setHorizontalGroup(
            pnlGeneradorCongruencialLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlGeneradorCongruencialLayout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addGroup(pnlGeneradorCongruencialLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlGeneradorCongruencialLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(pnlGeneradorCongruencialLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlGeneradorCongruencialLayout.createSequentialGroup()
                                .addComponent(lblC)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtC, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlGeneradorCongruencialLayout.createSequentialGroup()
                                .addComponent(lblSemilla)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtSemilla, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGroup(pnlGeneradorCongruencialLayout.createSequentialGroup()
                            .addGap(69, 69, 69)
                            .addGroup(pnlGeneradorCongruencialLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(cbxCAutomatico)
                                .addComponent(lblCCalculado)))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlGeneradorCongruencialLayout.createSequentialGroup()
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(pnlGeneradorCongruencialLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlGeneradorCongruencialLayout.createSequentialGroup()
                                    .addGroup(pnlGeneradorCongruencialLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(lblA, javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(lblM))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addGroup(pnlGeneradorCongruencialLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(txtM)
                                        .addComponent(txtA, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlGeneradorCongruencialLayout.createSequentialGroup()
                                    .addGroup(pnlGeneradorCongruencialLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(lblG)
                                        .addComponent(lblK))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addGroup(pnlGeneradorCongruencialLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(txtK, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(txtG, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlGeneradorCongruencialLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(rbtParametrosGK)
                                    .addComponent(rbtParametrosAM))
                                .addGroup(pnlGeneradorCongruencialLayout.createSequentialGroup()
                                    .addGap(22, 22, 22)
                                    .addComponent(btnGenerarSerie)))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(pnlGeneradorCongruencialLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(lblG2)
                                .addComponent(lblK2))
                            .addGap(15, 15, 15)))
                    .addGroup(pnlGeneradorCongruencialLayout.createSequentialGroup()
                        .addComponent(lblMetodo)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(pnlGeneradorCongruencialLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(rbtCongruencialMultiplicativo)
                            .addComponent(rbtCongruencialMixto))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 106, Short.MAX_VALUE)
                .addGroup(pnlGeneradorCongruencialLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btnGenerarOtroNumero)
                    .addComponent(scpTblRnd, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(211, 211, 211))
        );
        pnlGeneradorCongruencialLayout.setVerticalGroup(
            pnlGeneradorCongruencialLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlGeneradorCongruencialLayout.createSequentialGroup()
                .addGroup(pnlGeneradorCongruencialLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlGeneradorCongruencialLayout.createSequentialGroup()
                        .addGap(43, 43, 43)
                        .addGroup(pnlGeneradorCongruencialLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(rbtCongruencialMixto)
                            .addComponent(lblMetodo))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(rbtCongruencialMultiplicativo, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(pnlGeneradorCongruencialLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtSemilla, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblSemilla))
                        .addGap(18, 18, 18)
                        .addGroup(pnlGeneradorCongruencialLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtC, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblC))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cbxCAutomatico)
                        .addGap(1, 1, 1)
                        .addComponent(lblCCalculado)
                        .addGap(3, 3, 3)
                        .addComponent(rbtParametrosAM)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(pnlGeneradorCongruencialLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblM)
                            .addComponent(txtM, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(pnlGeneradorCongruencialLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtA, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblA))
                        .addGap(6, 6, 6)
                        .addComponent(rbtParametrosGK)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(pnlGeneradorCongruencialLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblG)
                            .addComponent(lblG2)
                            .addComponent(txtG, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(pnlGeneradorCongruencialLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtK, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblK)
                            .addComponent(lblK2)))
                    .addGroup(pnlGeneradorCongruencialLayout.createSequentialGroup()
                        .addGap(36, 36, 36)
                        .addComponent(scpTblRnd, javax.swing.GroupLayout.PREFERRED_SIZE, 239, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnGenerarOtroNumero)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnGenerarSerie, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(58, Short.MAX_VALUE))
        );

        getContentPane().add(pnlGeneradorCongruencial, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void rbtCongruencialMixtoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbtCongruencialMixtoActionPerformed
        txtC.setEnabled(true);
        cbxCAutomatico.setEnabled(true);
        lblK2.setText("para a = 1 + 4 K");
    }//GEN-LAST:event_rbtCongruencialMixtoActionPerformed

    private void rbtCongruencialMultiplicativoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbtCongruencialMultiplicativoActionPerformed
        txtC.setEnabled(false);
        cbxCAutomatico.setEnabled(false);
        lblK2.setText("para a = 3 + 8 K");
    }//GEN-LAST:event_rbtCongruencialMultiplicativoActionPerformed

    private void rbtParametrosAMActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbtParametrosAMActionPerformed
        txtA.setEnabled(true);
        txtM.setEnabled(true);
        txtG.setEnabled(false);
        txtK.setEnabled(false);
    }//GEN-LAST:event_rbtParametrosAMActionPerformed

    private void rbtParametrosGKActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbtParametrosGKActionPerformed
        txtA.setEnabled(false);
        txtM.setEnabled(false);
        txtG.setEnabled(true);
        txtK.setEnabled(true);
    }//GEN-LAST:event_rbtParametrosGKActionPerformed

    private void btnGenerarOtroNumeroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGenerarOtroNumeroActionPerformed
        double proximoEntero = gestor.generarProximoEntero((double)1);
        // Creamos un vector de Objet para armar la nueva fila
        Object v[] = {((DefaultTableModel) tblRnd.getModel()).getRowCount() + 1, proximoEntero};
        // Agregamos la fila
        ((DefaultTableModel) tblRnd.getModel()).addRow(v);
    }//GEN-LAST:event_btnGenerarOtroNumeroActionPerformed

    private void btnGenerarSerieActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGenerarSerieActionPerformed

        int metodo = -1, semilla = -1, a = -1, c = -1, m = -1;

        if (rbtCongruencialMixto.isSelected()) {
            metodo = Gestor.GENERADOR_CONGRUENCIAL_MIXTO;
        } else if (rbtCongruencialMultiplicativo.isSelected()) {
            metodo = Gestor.GENERADOR_CONGRUENCIAL_MULTIPLICATIVO;
        }
        // semilla
        try {
            semilla = Integer.parseInt(txtSemilla.getText());
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(rootPane, e);
        }
        // a, m
        if (rbtParametrosAM.isSelected()) {
            try {
                a = Integer.parseInt(txtA.getText());
            } catch (NumberFormatException e) {
                JOptionPane.showMessageDialog(rootPane, e);
            }
            try {
                m = Integer.parseInt(txtM.getText());
            } catch (NumberFormatException e) {
                JOptionPane.showMessageDialog(rootPane, e);
            }

        } else if (rbtParametrosGK.isSelected()) {
            try {
                int g = Integer.parseInt(txtG.getText());
                m = (int) Math.pow(2.0, (double) g);
            } catch (NumberFormatException e) {
                JOptionPane.showMessageDialog(rootPane, e);
            }
            try {
                int k = Integer.parseInt(txtK.getText());
                if (k > 0) {
                    if (rbtCongruencialMixto.isSelected()) {
                        a = (int) 1 + 4 * k;
                    }
                    if (rbtCongruencialMultiplicativo.isSelected()) {
                        a = (int) 3 + 8 * k;
                    }
                }
            } catch (NumberFormatException e) {
                JOptionPane.showMessageDialog(rootPane, e);
            }
        }
        if (rbtCongruencialMultiplicativo.isSelected()) {
            c = 0;
        } else {
            if (cbxCAutomatico.isSelected()) {
                c = gestor.generarCAutomatico(m);
                lblCCalculado.setText("c = " + c);
            } else {
                try {
                    c = Integer.parseInt(txtC.getText());
                } catch (NumberFormatException e) {
                    JOptionPane.showMessageDialog(rootPane, e);
                }
            }
        }
        
                LinkedList<Double> list = gestor.generarSerieEnterosAleatorios(metodo, 20, semilla, a, c, m, 1);
        
        //Acá llenamos la tabla
        //Tomamos el nombre de las columnas
        int cantColumnas = ((DefaultTableModel) tblRnd.getModel()).getColumnCount();
        Object[] columnas = new Object[cantColumnas];
        for (int i = 0; i < cantColumnas; i++) {
            columnas[i] = ((DefaultTableModel) tblRnd.getModel()).getColumnName(i);
        }
        //Armamos las filas
        int cantFilas = 20;
        Object[][] filas = new Object[cantFilas][cantColumnas];
        int i = 0;
        for (Double number : list) {
            Object[] fila = new Object[2];
            fila[0] = i + 1;
            fila[1] = number;
            filas[i] = fila;
            i++;
        }
        //seteamos la tabla
        ((DefaultTableModel) tblRnd.getModel()).setDataVector(filas, columnas);
        btnGenerarOtroNumero.setEnabled(true);
    }//GEN-LAST:event_btnGenerarSerieActionPerformed

    private void cbxCAutomaticoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbxCAutomaticoActionPerformed
        if (txtC.isEnabled()) {
            txtC.setEnabled(false);
        } else {
            txtC.setEnabled(true);
        }
    }//GEN-LAST:event_cbxCAutomaticoActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup btgMetodo;
    private javax.swing.ButtonGroup btgParametros;
    private javax.swing.JButton btnGenerarOtroNumero;
    private javax.swing.JButton btnGenerarSerie;
    private javax.swing.JCheckBox cbxCAutomatico;
    private javax.swing.JLabel lblA;
    private javax.swing.JLabel lblC;
    private javax.swing.JLabel lblCCalculado;
    private javax.swing.JLabel lblG;
    private javax.swing.JLabel lblG2;
    private javax.swing.JLabel lblK;
    private javax.swing.JLabel lblK2;
    private javax.swing.JLabel lblM;
    private javax.swing.JLabel lblMetodo;
    private javax.swing.JLabel lblSemilla;
    private javax.swing.JPanel pnlGeneradorCongruencial;
    private javax.swing.JRadioButton rbtCongruencialMixto;
    private javax.swing.JRadioButton rbtCongruencialMultiplicativo;
    private javax.swing.JRadioButton rbtParametrosAM;
    private javax.swing.JRadioButton rbtParametrosGK;
    private javax.swing.JScrollPane scpTblRnd;
    private javax.swing.JTable tblRnd;
    private javax.swing.JTextField txtA;
    private javax.swing.JTextField txtC;
    private javax.swing.JTextField txtG;
    private javax.swing.JTextField txtK;
    private javax.swing.JTextField txtM;
    private javax.swing.JTextField txtSemilla;
    // End of variables declaration//GEN-END:variables
}
