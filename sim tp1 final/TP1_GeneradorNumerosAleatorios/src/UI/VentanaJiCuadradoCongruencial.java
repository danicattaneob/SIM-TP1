/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UI;

import Logica.Gestor;
import Logica.Item;
import Logica.ListaFrecuenciaIntervalo;
import java.util.Enumeration;
import javax.swing.AbstractButton;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.data.category.DefaultCategoryDataset;

/**
 *
 * @author Santiago
 */
public class VentanaJiCuadradoCongruencial extends javax.swing.JFrame {

    /**
     * Creates new form Ventana
     */
    Gestor gestor;
    ListaFrecuenciaIntervalo listFI;

    public VentanaJiCuadradoCongruencial(Gestor gestor) {
        initComponents();

        this.gestor = gestor;

//        btgIntervalosT.add(rbtT5);
//        btgIntervalosT.add(rbtT10);
//        btgIntervalosT.add(rbtT20);
//        btgIntervalosT.add(rbtTOtro);//DANI LO AGREGO -------------------------
//        rbtT20.setSelected(true);
        btnGraficar.setEnabled(false);//DANI LO AGREGO ------------------------
      //  txtIntervaloOtro.setEnabled(false);//DANI LO AGREGO -------------------

        rbtParametrosAM.setSelected(true);
        txtG.setEnabled(false);
        txtK.setEnabled(false);

        btgParametros.add(rbtParametrosAM);
        btgParametros.add(rbtParametrosGK);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btgIntervalosT = new javax.swing.ButtonGroup();
        btgParametros = new javax.swing.ButtonGroup();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        pnlJuCuadradoJava = new javax.swing.JPanel();
        txtTamanioN = new javax.swing.JTextField();
        lblTamanioN = new javax.swing.JLabel();
        lblIntervalos = new javax.swing.JLabel();
        scpTblFrecuencias = new javax.swing.JScrollPane();
        tblFrecuencias = new javax.swing.JTable();
        lblFrecuencias = new javax.swing.JLabel();
        btnGenerarNumeros = new javax.swing.JButton();
        btnGraficar = new javax.swing.JButton();
        txtC = new javax.swing.JTextField();
        rbtParametrosAM = new javax.swing.JRadioButton();
        rbtParametrosGK = new javax.swing.JRadioButton();
        txtG = new javax.swing.JTextField();
        txtK = new javax.swing.JTextField();
        lblK2 = new javax.swing.JLabel();
        lblG2 = new javax.swing.JLabel();
        lblK = new javax.swing.JLabel();
        lblG = new javax.swing.JLabel();
        lblA = new javax.swing.JLabel();
        txtA = new javax.swing.JTextField();
        lblM = new javax.swing.JLabel();
        txtM = new javax.swing.JTextField();
        lblC = new javax.swing.JLabel();
        lblSemilla = new javax.swing.JLabel();
        txtSemilla = new javax.swing.JTextField();
        cbxCAutomatico = new javax.swing.JCheckBox();
        lblCCalculado = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtIntervaloOtro = new javax.swing.JTextArea();

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Prueba Ji cuadrado generador congruencial mixto");

        lblTamanioN.setText("Tamaño de muestra (N):");

        lblIntervalos.setText("Cantidad de intervalos (T):");

        tblFrecuencias.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Intervalo", "Frecuencia"
            }
        ));
        scpTblFrecuencias.setViewportView(tblFrecuencias);

        lblFrecuencias.setText("Cantidad de números por intervalo:");

        btnGenerarNumeros.setText("Generar números");
        btnGenerarNumeros.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGenerarNumerosActionPerformed(evt);
            }
        });

        btnGraficar.setText("Graficar");
        btnGraficar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGraficarActionPerformed(evt);
            }
        });

        rbtParametrosAM.setText("Ingresar m y a");
        rbtParametrosAM.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbtParametrosAMActionPerformed(evt);
            }
        });

        rbtParametrosGK.setText("Ingresar g y k");
        rbtParametrosGK.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbtParametrosGKActionPerformed(evt);
            }
        });

        lblK2.setText("para a = 1 + 4 K");

        lblG2.setText("para m = 2 ^ g");

        lblK.setText("k:");

        lblG.setText("g:");

        lblA.setText("a:");

        lblM.setText("m:");

        lblC.setText("c:");

        lblSemilla.setText("Semilla (X0):");

        cbxCAutomatico.setText("Generar c automaticamente");
        cbxCAutomatico.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbxCAutomaticoActionPerformed(evt);
            }
        });

        lblCCalculado.setText("c = ");

        txtIntervaloOtro.setColumns(1);
        txtIntervaloOtro.setRows(1);
        jScrollPane2.setViewportView(txtIntervaloOtro);

        javax.swing.GroupLayout pnlJuCuadradoJavaLayout = new javax.swing.GroupLayout(pnlJuCuadradoJava);
        pnlJuCuadradoJava.setLayout(pnlJuCuadradoJavaLayout);
        pnlJuCuadradoJavaLayout.setHorizontalGroup(
            pnlJuCuadradoJavaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlJuCuadradoJavaLayout.createSequentialGroup()
                .addGroup(pnlJuCuadradoJavaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlJuCuadradoJavaLayout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addGroup(pnlJuCuadradoJavaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pnlJuCuadradoJavaLayout.createSequentialGroup()
                                .addComponent(lblTamanioN)
                                .addGap(18, 18, 18)
                                .addComponent(txtTamanioN, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(pnlJuCuadradoJavaLayout.createSequentialGroup()
                                .addGroup(pnlJuCuadradoJavaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblIntervalos)
                                    .addGroup(pnlJuCuadradoJavaLayout.createSequentialGroup()
                                        .addComponent(lblSemilla)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txtSemilla, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(pnlJuCuadradoJavaLayout.createSequentialGroup()
                        .addGap(52, 52, 52)
                        .addGroup(pnlJuCuadradoJavaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlJuCuadradoJavaLayout.createSequentialGroup()
                                .addGroup(pnlJuCuadradoJavaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblA, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(lblM))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(pnlJuCuadradoJavaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtM)
                                    .addComponent(txtA, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlJuCuadradoJavaLayout.createSequentialGroup()
                                .addGroup(pnlJuCuadradoJavaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(lblG)
                                    .addComponent(lblK))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(pnlJuCuadradoJavaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtK, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtG, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlJuCuadradoJavaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(rbtParametrosGK)
                                .addComponent(rbtParametrosAM)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(pnlJuCuadradoJavaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblG2)
                            .addComponent(lblK2)))
                    .addGroup(pnlJuCuadradoJavaLayout.createSequentialGroup()
                        .addGap(71, 71, 71)
                        .addComponent(lblC)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(pnlJuCuadradoJavaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cbxCAutomatico)
                            .addComponent(lblCCalculado)
                            .addComponent(txtC, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(pnlJuCuadradoJavaLayout.createSequentialGroup()
                        .addGap(62, 62, 62)
                        .addComponent(btnGenerarNumeros)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 146, Short.MAX_VALUE)
                .addGroup(pnlJuCuadradoJavaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblFrecuencias)
                    .addGroup(pnlJuCuadradoJavaLayout.createSequentialGroup()
                        .addGap(158, 158, 158)
                        .addComponent(btnGraficar))
                    .addComponent(scpTblFrecuencias, javax.swing.GroupLayout.PREFERRED_SIZE, 229, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(56, Short.MAX_VALUE))
        );
        pnlJuCuadradoJavaLayout.setVerticalGroup(
            pnlJuCuadradoJavaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlJuCuadradoJavaLayout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(pnlJuCuadradoJavaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlJuCuadradoJavaLayout.createSequentialGroup()
                        .addGroup(pnlJuCuadradoJavaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtTamanioN, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblTamanioN))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(pnlJuCuadradoJavaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblIntervalos)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(26, 26, 26)
                        .addGroup(pnlJuCuadradoJavaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtSemilla, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblSemilla))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(pnlJuCuadradoJavaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtC, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblC))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(cbxCAutomatico)
                        .addGap(1, 1, 1)
                        .addComponent(lblCCalculado)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(rbtParametrosAM)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(pnlJuCuadradoJavaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblM)
                            .addComponent(txtM, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(pnlJuCuadradoJavaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtA, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblA))
                        .addGap(6, 6, 6)
                        .addComponent(rbtParametrosGK)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(pnlJuCuadradoJavaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblG)
                            .addComponent(lblG2)
                            .addComponent(txtG, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(pnlJuCuadradoJavaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtK, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblK)
                            .addComponent(lblK2)))
                    .addGroup(pnlJuCuadradoJavaLayout.createSequentialGroup()
                        .addComponent(lblFrecuencias)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(scpTblFrecuencias, javax.swing.GroupLayout.PREFERRED_SIZE, 302, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnlJuCuadradoJavaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnGenerarNumeros)
                    .addComponent(btnGraficar))
                .addContainerGap(38, Short.MAX_VALUE))
        );

        getContentPane().add(pnlJuCuadradoJava, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnGenerarNumerosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGenerarNumerosActionPerformed
        int n = -1;
        try {
            n = Integer.parseInt(txtTamanioN.getText());
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(rootPane, e);
        }

        int semilla = -1;
        try {
            semilla = Integer.parseInt(txtSemilla.getText());
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(rootPane, e);
        }

        int m = -1, a = -1, g = -1, k = -1, c = -1;
        if (txtM.isEnabled()) {
            try {
                m = Integer.parseInt(txtM.getText());
            } catch (NumberFormatException e) {
                JOptionPane.showMessageDialog(rootPane, e);
            }
            try {
                a = Integer.parseInt(txtA.getText());
            } catch (NumberFormatException e) {
                JOptionPane.showMessageDialog(rootPane, e);
            }
        } else {
            try {
                k = Integer.parseInt(txtK.getText());
                if (k > 0) {
                    a = (int) 1 + 4 * k;
                }
            } catch (NumberFormatException e) {
                JOptionPane.showMessageDialog(rootPane, e);
            }

            try {
                g = Integer.parseInt(txtG.getText());
                if (g > 0) {
                    m = (int) Math.pow(2.0, (double) g);
                }
            } catch (NumberFormatException e) {
                JOptionPane.showMessageDialog(rootPane, e);
            }
        }

        if (cbxCAutomatico.isSelected()) {
            c = gestor.generarCAutomatico(m);
            lblCCalculado.setText("c = "+ c);
        } else {
            try {
                c = Integer.parseInt(txtC.getText());
            } catch (NumberFormatException e) {
                JOptionPane.showMessageDialog(rootPane, e);
            }
        }
        
        if (n > 0 && a > 0 && m > 0 && c > 0 && semilla >= 0) {
            //Enumeration<AbstractButton> elements = btgIntervalosT.getElements();
            int intervalos = 20;
            // VALTER AGREGO -------
            try{
                intervalos = Integer.parseInt(txtIntervaloOtro.getText());
            }  catch(NumberFormatException e) {
            JOptionPane.showMessageDialog(rootPane, e);
        }
            //VALTER AGREGO-------
//            while (elements.hasMoreElements()) {
//                AbstractButton ab = elements.nextElement();
//                if( ab.isSelected() ){
//                    if(ab.getText().equals("Otro:")){ //DANI LO AGREGO ------------------------
//                        intervalos = Integer.parseInt(txtIntervaloOtro.getText());//DANI LO AGREGO ------------------------
//                        //System.out.println(intervalos); lo hice para debuggear
//                    }else{
//                        intervalos = Integer.parseInt(ab.getText()); //DANI LO AGREGO ------------------------
//                    }
//                    break;
//                }
//            }
            this.listFI = gestor.generarFrecuenciasJiCuadrado(Gestor.GENERADOR_CONGRUENCIAL_MIXTO,
                    n,
                    intervalos,
                    4,
                    a,
                    c,
                    m,
                    semilla
            );
            //Acá llenamos la tabla
            //Tomamos el nombre de las columnas
            int cantColumnas = ((DefaultTableModel) tblFrecuencias.getModel()).getColumnCount();
            Object[] columnas = new Object[cantColumnas];
            for (int i = 0; i < cantColumnas; i++) {
                columnas[i] = ((DefaultTableModel) tblFrecuencias.getModel()).getColumnName(i);
            }
            //Armamos las filas
            int cantFilas = intervalos;
            Object[][] filas = new Object[cantFilas][cantColumnas];
            int i = 0;
            for (Item it : this.listFI.getList()) {
                Object[] fila = new Object[2];
                fila[0] = it.getIntervalo();
                fila[1] = it.getFrecuencia();
                filas[i] = fila;
                i++;
            }
            //seteamos la tabla
            ((DefaultTableModel) tblFrecuencias.getModel()).setDataVector(filas, columnas);
        }

        btnGraficar.setEnabled(true);
    }//GEN-LAST:event_btnGenerarNumerosActionPerformed

    private void btnGraficarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGraficarActionPerformed

        DefaultCategoryDataset dataset = new DefaultCategoryDataset();
        // El DefaultCategoryDataset es un objeto que contiene los datos que el 
        // Chart graficará
        // * Llenar el Dataset con los datos de la tabla.
        for (Item it : this.listFI.getList()) {
            dataset.addValue(it.getFrecuencia(), "Frecuencia", it.getIntervalo());
        }

        JFreeChart chart = ChartFactory.createBarChart("Frecuencias e Intérvalos",
                "Intevalos",
                "Frecuencias",
                dataset,
                PlotOrientation.VERTICAL,
                false,
                true,
                false
        );
        ChartPanel cPanel = new ChartPanel(chart);
        // ChartPanel es una clase que hereda de JPanel que contendrá el 
        // JFreeChart que se acaba de crear.

        VentanaGrafica vtn = new VentanaGrafica();
        vtn.setTitle(this.getTitle());
        vtn.getContentPane().add(cPanel);
        vtn.pack(); //hace que la ventana tome su PreferedSize
        vtn.setVisible(true);
    }//GEN-LAST:event_btnGraficarActionPerformed

    private void rbtParametrosAMActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbtParametrosAMActionPerformed
        txtA.setEnabled(true);
        txtM.setEnabled(true);
        txtG.setEnabled(false);
        txtK.setEnabled(false);
    }//GEN-LAST:event_rbtParametrosAMActionPerformed

    private void rbtParametrosGKActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbtParametrosGKActionPerformed
        txtA.setEnabled(false);
        txtM.setEnabled(false);
        txtG.setEnabled(true);
        txtK.setEnabled(true);
    }//GEN-LAST:event_rbtParametrosGKActionPerformed

    private void cbxCAutomaticoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbxCAutomaticoActionPerformed
        if (txtC.isEnabled()) {
            txtC.setEnabled(false);
        } else {
            txtC.setEnabled(true);
        }
    }//GEN-LAST:event_cbxCAutomaticoActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup btgIntervalosT;
    private javax.swing.ButtonGroup btgParametros;
    private javax.swing.JButton btnGenerarNumeros;
    private javax.swing.JButton btnGraficar;
    private javax.swing.JCheckBox cbxCAutomatico;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JLabel lblA;
    private javax.swing.JLabel lblC;
    private javax.swing.JLabel lblCCalculado;
    private javax.swing.JLabel lblFrecuencias;
    private javax.swing.JLabel lblG;
    private javax.swing.JLabel lblG2;
    private javax.swing.JLabel lblIntervalos;
    private javax.swing.JLabel lblK;
    private javax.swing.JLabel lblK2;
    private javax.swing.JLabel lblM;
    private javax.swing.JLabel lblSemilla;
    private javax.swing.JLabel lblTamanioN;
    private javax.swing.JPanel pnlJuCuadradoJava;
    private javax.swing.JRadioButton rbtParametrosAM;
    private javax.swing.JRadioButton rbtParametrosGK;
    private javax.swing.JScrollPane scpTblFrecuencias;
    private javax.swing.JTable tblFrecuencias;
    private javax.swing.JTextField txtA;
    private javax.swing.JTextField txtC;
    private javax.swing.JTextField txtG;
    private javax.swing.JTextArea txtIntervaloOtro;
    private javax.swing.JTextField txtK;
    private javax.swing.JTextField txtM;
    private javax.swing.JTextField txtSemilla;
    private javax.swing.JTextField txtTamanioN;
    // End of variables declaration//GEN-END:variables
}
